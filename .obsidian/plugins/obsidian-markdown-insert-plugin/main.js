/*
THIS IS A GENERATED/BUNDLED FILE BY ROLLUP
if you want to view the source visit the plugins github repository
*/

'use strict';

var obsidian = require('obsidian');

/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

const DEFAULT_SETTINGS = {
    defaultTitle: ''
};
class InsertPlugin extends obsidian.Plugin {
    onload() {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.loadSettings();
            obsidian.addIcon('md-link', '<path id="Path" d="M45.858 53.117 C41.803 49.062 35.228 49.062 31.174 53.117 L26.947 57.343 C22.892 61.398 22.892 67.973 26.947 72.027 L27.988 73.068 C32.043 77.123 38.617 77.123 42.672 73.068 L46.898 68.842 C50.953 64.787 50.953 58.212 46.898 54.158 Z" fill="none" stroke="#999999" stroke-width="5.4" stroke-opacity="1" stroke-linejoin="round" stroke-linecap="round"/><path id="Shape" d="M40.671 59.399 L58.905 41.036" fill="none" stroke="#999999" stroke-width="5.4" stroke-opacity="1" stroke-linejoin="round" stroke-linecap="round"/><path id="Shape-1" d="M71.984 27.054 C67.912 22.982 61.309 22.982 57.236 27.054 L53.042 31.249 C48.969 35.321 48.969 41.925 53.042 45.997 L54.018 46.974 C58.091 51.046 64.694 51.046 68.766 46.974 L72.961 42.779 C77.033 38.707 77.033 32.103 72.961 28.031 Z" fill="none" stroke="#999999" stroke-width="5.4" stroke-opacity="1" stroke-linejoin="round" stroke-linecap="round"/><path id="Line" d="M33.1 13.7 L12.8 13.7" fill="none" stroke="#999999" stroke-width="7.5" stroke-opacity="1" stroke-linejoin="round" stroke-linecap="round"/><path id="Line-copy" d="M12.8 86.3 L12.8 13.7" fill="none" stroke="#999999" stroke-width="7.5" stroke-opacity="1" stroke-linejoin="round" stroke-linecap="round"/><path id="Line-copy-1" d="M12.8 86.3 L33.1 86.3" fill="none" stroke="#999999" stroke-width="7.5" stroke-opacity="1" stroke-linejoin="round" stroke-linecap="round"/><path id="Line-copy-4" d="M87.4 13.7 L67.1 13.7" fill="none" stroke="#999999" stroke-width="7.5" stroke-opacity="1" stroke-linejoin="round" stroke-linecap="round"/><path id="Line-copy-3" d="M87.2 86.3 L87.2 13.7" fill="none" stroke="#999999" stroke-width="7.5" stroke-opacity="1" stroke-linejoin="round" stroke-linecap="round"/><path id="Line-copy-2" d="M67.1 86.3 L87.4 86.3" fill="none" stroke="#999999" stroke-width="7.5" stroke-opacity="1" stroke-linejoin="round" stroke-linecap="round"/>');
            this.addSettingTab(new InsertPluginSettingTab(this.app, this));
            this.addCommand({
                id: 'insert-link-into-selection',
                name: 'Insert link into selection',
                icon: 'md-link',
                editorCallback: (editor, _) => __awaiter(this, void 0, void 0, function* () {
                    const clipboardString = yield navigator.clipboard.readText();
                    if (clipboardString.length == 0) {
                        return new obsidian.Notice('No text found in clipboard');
                    }
                    if (editor.somethingSelected()) {
                        let selection = editor.getSelection();
                        if (this.isURL(selection)) {
                            editor.replaceSelection(`${this.isImageURL(selection) ? '!' : ''}[${clipboardString}](${selection})`);
                        }
                        else if (this.isURL(clipboardString)) {
                            editor.replaceSelection(`${this.isImageURL(clipboardString) ? '!' : ''}[${selection}](${clipboardString})`);
                        }
                        else {
                            return new obsidian.Notice('No URL found');
                        }
                    }
                    else {
                        let anchor = editor.listSelections()[0].anchor;
                        anchor.ch += this.isImageURL(clipboardString) ? 2 : 1;
                        editor.replaceSelection(`${this.isImageURL(clipboardString) ? '!' : ''}[${this.settings.defaultTitle}](${clipboardString})`);
                        if (this.settings.defaultTitle.length == 0) {
                            editor.setSelection(anchor);
                        }
                    }
                })
            });
        });
    }
    isURL(string) {
        try {
            let _ = new URL(string);
        }
        catch (_a) {
            return false;
        }
        return true;
    }
    isImageURL(string) {
        return (string.match(/\.(jpeg|jpg|gif|png|tif|tiff|bmp|eps|raw|apng|avif|jfif|pjpeg|pjp|svg|webp)$/) != null);
    }
    loadSettings() {
        return __awaiter(this, void 0, void 0, function* () {
            this.settings = Object.assign({}, DEFAULT_SETTINGS, yield this.loadData());
        });
    }
    saveSettings() {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.saveData(this.settings);
        });
    }
}
class InsertPluginSettingTab extends obsidian.PluginSettingTab {
    constructor(app, plugin) {
        super(app, plugin);
        this.plugin = plugin;
    }
    display() {
        let { containerEl } = this;
        containerEl.empty();
        new obsidian.Setting(containerEl)
            .setName('Default title')
            .setDesc('The title to use when pasting links without text selected.')
            .addText(text => text
            .setValue(this.plugin.settings.defaultTitle)
            .onChange((value) => __awaiter(this, void 0, void 0, function* () {
            this.plugin.settings.defaultTitle = value;
            yield this.plugin.saveSettings();
        })));
    }
}

module.exports = InsertPlugin;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZXMiOlsibm9kZV9tb2R1bGVzL3RzbGliL3RzbGliLmVzNi5qcyIsIm1haW4udHMiXSwic291cmNlc0NvbnRlbnQiOm51bGwsIm5hbWVzIjpbIlBsdWdpbiIsImFkZEljb24iLCJOb3RpY2UiLCJQbHVnaW5TZXR0aW5nVGFiIiwiU2V0dGluZyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQXVEQTtBQUNPLFNBQVMsU0FBUyxDQUFDLE9BQU8sRUFBRSxVQUFVLEVBQUUsQ0FBQyxFQUFFLFNBQVMsRUFBRTtBQUM3RCxJQUFJLFNBQVMsS0FBSyxDQUFDLEtBQUssRUFBRSxFQUFFLE9BQU8sS0FBSyxZQUFZLENBQUMsR0FBRyxLQUFLLEdBQUcsSUFBSSxDQUFDLENBQUMsVUFBVSxPQUFPLEVBQUUsRUFBRSxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRTtBQUNoSCxJQUFJLE9BQU8sS0FBSyxDQUFDLEtBQUssQ0FBQyxHQUFHLE9BQU8sQ0FBQyxFQUFFLFVBQVUsT0FBTyxFQUFFLE1BQU0sRUFBRTtBQUMvRCxRQUFRLFNBQVMsU0FBUyxDQUFDLEtBQUssRUFBRSxFQUFFLElBQUksRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxPQUFPLENBQUMsRUFBRSxFQUFFLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUU7QUFDbkcsUUFBUSxTQUFTLFFBQVEsQ0FBQyxLQUFLLEVBQUUsRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxPQUFPLENBQUMsRUFBRSxFQUFFLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFF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
